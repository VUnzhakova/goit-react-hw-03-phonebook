{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo-PC\\\\OneDrive\\\\Documents\\\\GitHub\\\\goit-react-hw-03-phonebook\\\\src\\\\components\\\\ContactList\\\\ContactList.jsx\";\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem'; // import Notification from 'components/Notification';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactList = _ref => {\n  let {\n    contacts,\n    onDeleteContact\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: s.list,\n    children: contacts.map(contacts => /*#__PURE__*/_jsxDEV(ContactItem, {\n      id: contacts.id,\n      name: contacts.name,\n      number: contacts.number,\n      onDeleteContact: onDeleteContact\n    }, contacts.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ContactList;\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  })),\n  onDeleteContact: PropTypes.func.isRequired\n};\nexport default ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["C:/Users/Lenovo-PC/OneDrive/Documents/GitHub/goit-react-hw-03-phonebook/src/components/ContactList/ContactList.jsx"],"names":["s","PropTypes","ContactItem","ContactList","contacts","onDeleteContact","list","map","id","name","number","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":";AAAA,OAAOA,CAAP,MAAc,0BAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CACA;;;;AAEA,MAAMC,WAAW,GAAG;AAAA,MAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD;AAAA,sBAClB;AAAI,IAAA,SAAS,EAAEL,CAAC,CAACM,IAAjB;AAAA,cACGF,QAAQ,CAACG,GAAT,CAAaH,QAAQ,iBACpB,QAAC,WAAD;AAEE,MAAA,EAAE,EAAEA,QAAQ,CAACI,EAFf;AAGE,MAAA,IAAI,EAAEJ,QAAQ,CAACK,IAHjB;AAIE,MAAA,MAAM,EAAEL,QAAQ,CAACM,MAJnB;AAKE,MAAA,eAAe,EAAEL;AALnB,OACOD,QAAQ,CAACI,EADhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADkB;AAAA,CAApB;;KAAML,W;AAaNA,WAAW,CAACQ,SAAZ,GAAwB;AACtBP,EAAAA,QAAQ,EAAEH,SAAS,CAACW,OAAV,CACRX,SAAS,CAACY,KAAV,CAAgB;AACdL,IAAAA,EAAE,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UADP;AAEdN,IAAAA,IAAI,EAAER,SAAS,CAACa,MAAV,CAAiBC,UAFT;AAGdL,IAAAA,MAAM,EAAET,SAAS,CAACa,MAAV,CAAiBC;AAHX,GAAhB,CADQ,CADY;AAQtBV,EAAAA,eAAe,EAAEJ,SAAS,CAACe,IAAV,CAAeD;AARV,CAAxB;AAWA,eAAeZ,WAAf","sourcesContent":["import s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\n// import Notification from 'components/Notification';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(contacts => (\n      <ContactItem\n        key={contacts.id}\n        id={contacts.id}\n        name={contacts.name}\n        number={contacts.number}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </ul>\n);\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}