{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo-PC\\\\OneDrive\\\\Documents\\\\GitHub\\\\goit-react-hw-03-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\nimport s from './App.module.css';\nimport ContactList from './ContactList/ContactList';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport Notification from './Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.addContact = _ref => {\n      let {\n        name,\n        number\n      } = _ref;\n      const normalizedName = name.toLowerCase();\n      let isAdded = false;\n      this.state.contacts.forEach(el => {\n        if (el.name.toLowerCase() === normalizedName) {\n          alert(`${name} is already in contacts`);\n          isAdded = true;\n        }\n      });\n\n      if (isAdded) {\n        return;\n      }\n\n      const contact = {\n        id: shortid.generate(),\n        name: name,\n        number: number\n      };\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact]\n      }));\n    };\n\n    this.changeFilter = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.getVisibleContacts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n\n    this.deleteContact = todoId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== todoId)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        fontSize: 18,\n        color: '#010101'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: s.titleContacts,\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.allContacts,\n        children: [\"All contacts: \", contacts.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), contacts.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          value: filter,\n          onChange: this.changeFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: visibleContacts,\n          onDeleteContact: this.deleteContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"Contact list is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Lenovo-PC/OneDrive/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["React","Component","shortid","s","ContactList","ContactForm","Filter","Notification","App","state","contacts","id","name","number","filter","addContact","normalizedName","toLowerCase","isAdded","forEach","el","alert","contact","generate","setState","prevState","changeFilter","e","currentTarget","value","getVisibleContacts","normalizedFilter","includes","deleteContact","todoId","componentDidMount","localStorage","getItem","parsedContacts","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render","visibleContacts","display","justifyContent","alignItems","flexDirection","fontSize","color","titleContacts","allContacts","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport s from './App.module.css';\nimport ContactList from './ContactList/ContactList';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport Notification from './Notification';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n\n    let isAdded = false;\n    this.state.contacts.forEach(el => {\n      if (el.name.toLowerCase() === normalizedName) {\n        alert(`${name} is already in contacts`);\n        isAdded = true;\n      }\n    });\n\n    if (isAdded) {\n      return;\n    }\n    const contact = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = todoId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== todoId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          fontSize: 18,\n          color: '#010101',\n        }}\n      >\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 className={s.titleContacts}>Contacts</h2>\n        <div className={s.allContacts}>All contacts: {contacts.length}</div>\n\n        {contacts.length > 0 ? (\n          <>\n            <Filter value={filter} onChange={this.changeFilter} />\n            <ContactList\n              contacts={visibleContacts}\n              onDeleteContact={this.deleteContact}\n            />\n          </>\n        ) : (\n          <Notification message=\"Contact list is empty\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}